# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
      
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src/gfz-cli/
      
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./src/gfz-cli/
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./src/gfz-cli/
        
    - name: Publish
      # https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-publish#options
      # -c: Configuration. Options: Debug (default), Release, (other?)
      # -o: Specifies the path for the output directory.
      # -r: Runtime
      # --nologo: Doesn't display the startup banner or the copyright message.
      run: |
        dotnet publish gfz-cli.csproj  -c Debug  -o cibuild/linux-x64 -r linux-x64 --self-contained
        dotnet publish gfz-cli.csproj  -c Debug  -o cibuild/osx-x64   -r osx-x64   --self-contained
        dotnet publish gfz-cli.csproj  -c Debug  -o cibuild/win-x64   -r win-x64   --self-contained
        dotnet publish gfz-cli.csproj  -c Debug  -o cibuild/win-x86   -r win-x86   --self-contained
      working-directory: ./src/gfz-cli/
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: gfz-cli
        path: ./src/gfz-cli/ci-build/
